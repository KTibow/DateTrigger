(()=>{"use strict";class DateTriggerEvent{constructor(startDate,durationInMinutes,handler){if(!(startDate instanceof Date))throw new TypeError("startDate must be of type Date");if("number"!=typeof durationInMinutes)throw new TypeError("durationInMinutes must be a number");if("function"!=typeof handler)throw new TypeError("handler must be a function");this.startDate=startDate,this.durationInMinutes=durationInMinutes,this.handler=handler,this.endDate=new Date(this.startDate.getTime()+6e4*durationInMinutes),Object.freeze(this)}}class DateTriggerEventsHandler{constructor(customEvents={}){if("object"!=typeof customEvents)throw new TypeError("customEvents must be an object");if(Object.values(customEvents).some((e=>!(e instanceof DateTriggerEvent))))throw new TypeError("Every entry in customEvents must be an instance of DateTriggerEvent");return this.now=new Date,this.events={...customEvents},DateTriggerEventsHandler.instance||(DateTriggerEventsHandler.instance=this),Object.freeze(this),this.#run(),DateTriggerEventsHandler.instance}#run(){for(const evName in this.events){const event=this.events[evName];this.#areSameDate(event.startDate,this.now)&&this.#isEventActive(event)&&event.handler()}}#areSameDate(d1,d2){return d1.getMonth()===d2.getMonth()&&d1.getDate()===d2.getDate()}#isEventActive(event){if(!(event instanceof DateTriggerEvent))throw new TypeError("event must be an instance of DateTriggerEvent");const now=Date.parse(new Date),eventStartTime=Date.parse(event.startDate),eventEndTime=Date.parse(event.endDate);return now>=eventStartTime&&now<=eventEndTime}}"undefined"!=typeof window&&(window.DateTriggerEventsHandler=DateTriggerEventsHandler,window.DateTriggerEvent=DateTriggerEvent,window.DAY_IN_MINUTES=1440)})();